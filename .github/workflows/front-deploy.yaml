on:
  pull_request:
    paths:
      - 'front/**'
    branches:
      - master
    types: [closed]

name: Deploy to Amazon ECS WEB


jobs:
  ECR-deploy:
    name: ECR-Deploy
    runs-on: ubuntu-latest
    environment: production
    if: github.event.pull_request.merged == true
    defaults:
      run:
        working-directory: ./front

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: prum-person-portfolio-front
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"


  ECS-deploy:
    name: ECS-deploy
    needs: ECR-deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./front
    if: contains(github.event.pull_request.title, '[skip ecs]') == false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: front-ecs-task-def.json
          service: prum_person_portfolio_front
          cluster: prum_person_portfolio
          wait-for-service-stability: true